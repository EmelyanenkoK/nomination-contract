(int) equal_slices (slice s1, slice s2) asm "SDEQ";
(int) mod (int x, int y) asm "MOD";
forall T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 -> tuple storage_tuple(T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8, T9 t9, T10 t10) asm "10 TUPLE";
forall T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 -> (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) storage_untuple(tuple t) asm "10 UNTUPLE";
(cell, (cell, int)) ~udict_delete_get_ref?(cell dict, int key_len, int index) asm(index dict key_len) "DICTUDELGETREF" "NULLSWAPIFNOT";

(slice, int) dict_get?(cell dict, int key_len, slice index) asm(index dict key_len) "DICTGET" "NULLSWAPIFNOT";
builder store_builder(builder to, builder what) asm(what to) "STB";

(slice, (slice, int)) ~try_load_msg_addr(slice s) asm ( -> 2 1 0) "LDMSGADDRQ" "NULLSWAPIFNOT" "s1 s2 XCHG";
(cell, int, slice, int) udict::delete_get_min(cell dict, int key_len) asm(-> 0 2 1 3) "DICTUREMMIN" "NULLSWAPIFNOT2";


builder store_coins(builder b, int x) asm "STVARUINT16";
(slice, int) load_coins(slice s) asm( -> 1 0) "LDVARUINT16";

forall X, Y, Z, W -> X t4_first([X, Y, Z, W] p) asm "FIRST";
forall X, Y, Z, W -> Y t4_second([X, Y, Z, W] p) asm "SECOND";
forall X, Y, Z, W -> Z t4_third([X, Y, Z, W] p) asm "THIRD";
forall X, Y, Z, W -> W t4_fourth([X, Y, Z, W] p) asm "3 INDEX";

forall X, Y, Z, W -> ((X, Y, Z, W),()) stack_reverse_4(X x, Y y, Z z, W w) impure asm(-> 3 2 1 0) "4 0 REVERSE";
forall X, Y, Z, W, A -> ((X, Y, Z, W, A),()) stack_reverse_5(X x, Y y, Z z, W w, A a) impure asm(-> 4 3 2 1 0) "5 0 REVERSE";
