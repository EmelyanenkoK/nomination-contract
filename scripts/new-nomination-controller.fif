#!/usr/bin/fift -s
"TonUtil.fif" include
"Asm.fif" include

{ ."usage: " $0 type ." <workchain-id> <wallet-id> <nominator-address> <reward-share> <cover-ability> [<filename-base>]" cr
  ."Creates a validation controller with unique 32-bit identifier <wallet-id> in specified workchain" cr
  ."with preset nominator address <nominator-address>" cr
  ."<reward-share> from 0 to 1: which part of nominator profit goes to validator" cr
  ."<cover-ability> from 0 to 1: which part recommended fine validator guarantee to cover" cr
  ."Validation controller private key saved to or loaded from <filename-base>.pk" cr
  ."('new-wallet.pk' by default)" cr 1 halt
} : usage
$# dup 5 < swap 6 > or ' usage if

6 :$1..n
$1 parse-workchain-id =: wc    // set workchain id from command line argument
$2 parse-int =: subwallet-id
$3 parse-smc-addr drop 2=: nominator-address
$4 (number) 2 = {  swap 65535 * swap / } { 65535 * } cond dup dup 0 < swap 65535 > or abort"incorrect reward-share" =: reward-share
$5 (number) 2 = {  swap 65535 * swap / } { 65535 * } cond dup dup 0 < swap 65535 > or abort"incorrect cover-ability" =: cover-ability
$6 "new-controller" replace-if-null =: file-base

."Creating new advanced v3 wallet in workchain " wc . cr
."with unique wallet id " subwallet-id . cr

// Create new advanced wallet; code adapted from `auto/wallet3-code.fif`
"../build/nomination-controller.fif" include
// >libref
// code
<b 0 32 u, subwallet-id 32 u,
   file-base +".pk" load-generate-keypair
   constant wallet_pk
   B, 
   0 32 u,
   nominator-address Addr, // address
   reward-share 16 u, cover-ability 16 u,
   0 Gram, 0 Gram, 0 Gram, 0 Gram,
   0 32 u,
b> // data
null // no libraries
<b b{0011} s, 3 roll ref, rot ref, swap dict, b>  // create StateInit
dup ."StateInit: " <s csr. cr
dup hashu wc swap 2dup 2constant wallet_addr
."new wallet address = " 2dup .addr cr
2dup file-base +".addr" save-address-verbose
."Non-bounceable address (for init): " 2dup 7 .Addr cr
."Bounceable address (for later access): " 6 .Addr cr
<b subwallet-id 32 u, -1 32 i, 0 32 u, b>
dup ."signing message: " <s csr. cr
dup hashu wallet_pk ed25519_sign_uint rot
<b b{1000100} s, wallet_addr addr, b{000010} s, swap <s s, b{0} s, swap B, swap <s s, b>
dup ."External message for initialization is " <s csr. cr
2 boc+>B dup Bx. cr
file-base +"-query.boc" tuck B>file
."(Saved controller creating query to file " type .")" cr
